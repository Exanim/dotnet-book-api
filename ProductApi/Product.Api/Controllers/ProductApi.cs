/*
 * Products Microservice
 *
 * A service to post and get product data
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Products.Api.Attributes;
using Products.Api.Models;

namespace Products.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class ProductApi : ControllerBase
    {
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Adds a new product</remarks>
        /// <param name="productToAdd">Data of the product to add</param>
        /// <response code="201">Product added</response>
        /// <response code="400">Not a valid request</response>
        /// <response code="500">The server is unable to process this request</response>
        [HttpPost]
        [Route("/products")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AddProduct")]
        [SwaggerResponse(statusCode: 201, type: typeof(ProductWithIdDto), description: "Product added")]
        public abstract Task<IActionResult> AddProduct([FromBody] ProductDto productToAdd);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Deletes a product by id</remarks>
        /// <param name="productId">The id of the product</param>
        /// <response code="204">Successful delete</response>
        /// <response code="400">The id provided is not an integer</response>
        /// <response code="404">The product was not found</response>
        /// <response code="500">The server is unable to process this request</response>
        [HttpDelete]
        [Route("/products/{productId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProduct")]
        public abstract Task<IActionResult> DeleteProduct([FromRoute(Name = "productId")][Required] int productId);
        
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Returns the product data by Id</remarks>
        /// <param name="productId">The id of the product</param>
        /// <response code="200">Successful request</response>
        /// <response code="400">The id provided is not an integer</response>
        /// <response code="404">The product was not found</response>
        /// <response code="500">The server is unable to process this request</response>
        [HttpGet]
        [Route("/products/{productId}")]
        [ValidateModelState]
        [SwaggerOperation("GetProductById")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductDto), description: "Successful request")]
        public abstract Task<IActionResult> GetProductById([FromRoute(Name = "productId")][Required] int productId);
        
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Returns all products</remarks>
        /// <response code="200">Successful request</response>
        /// <response code="500">The server is unable to process this request</response>
        [HttpGet]
        [Route("/products")]
        [ValidateModelState]
        [SwaggerOperation("GetProducts")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProductWithIdDto>), description: "Successful request")]
        public abstract Task<IActionResult> GetProducts();

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Updates the data of a product by id</remarks>
        /// <param name="productId">The id of the product</param>
        /// <param name="productToAdd">Data of the product to add</param>
        /// <response code="204">Successful update</response>
        /// <response code="400">The id provided is not an integer</response>
        /// <response code="404">The product was not found</response>
        /// <response code="500">The server is unable to process this request</response>
        [HttpPut]
        [Route("/products/{productId}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateProduct")]
        public abstract Task<IActionResult> UpdateProduct([FromRoute(Name = "productId")][Required] int productId, [FromBody] ProductDto productToAdd);
    }
}
