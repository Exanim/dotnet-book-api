swagger: "2.0"
info:
  title: "Books Microservice"
  description: "A service to store books and request data about them."
  version: "0.0.1"
schemes: [https, http]
consumes:
- application/json
produces:
- application/json
tags:
  - name: "Book"
    description: "Requests about the stored books"
parameters:
  id: 
    name: Id
    description: "The id of the book"
    type: integer
    format: int32
    in: path
    required: true
  title:
    name: title
    description: "The title of the book"
    in: body
    required: true
    schema:
      type: string
paths:
  '/books':
    get:
      operationId: "GetBooks"
      description: "Gives back a list of stored books"
      tags: [Book]
      responses:
        200:
          description: "A sucsessful response that lists the stored books"
          schema:
            type: array
            items: 
              $ref: '#/definitions/Book'
  '/book':
    post:
      operationId: "PostBook"
      description: "Adds a book to the database"
      tags: [Book]
      parameters:
        - $ref: '#/parameters/title'
      responses:
        201:
          description: "The book with the given title is stored in the database"
  '/book/{Id}':
    get:
      operationId: "GetBookById"
      description: "Gives back a stored book by it's id"
      tags: [Book]
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: "A sucsessful response that gives back a book by id"
          schema:
            $ref: '#/definitions/Book'
        404:
          $ref: '#/responses/BookNotFound'
    put:
      operationId: "PatchBookById"
      description: "Updates a book by it's id"
      tags: [Book]
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/title' 
      responses:
        200:
          description: "The book with the given id is updated"
        404:
          $ref: '#/responses/BookNotFound'
    delete:
      operationId: "DeleteBookById"
      description: "Deletes a book from the database"
      tags: [Book]
      parameters:
        - $ref: '#/parameters/id'
      responses:
        204:
          description: "The book with the given id is deleted"
        404:
          $ref: '#/responses/BookNotFound'
responses:
  BookNotFound:
    description: "The Book with the given id is not found"
definitions:
  Book:
    type: "object"
    description: "A book from the database"
    required: 
      - id
      - title
    properties:
      id:
        type: integer
        format: int32
        description: "The id of the book"
      title:
        type: string
        description: "The title of the book"
        